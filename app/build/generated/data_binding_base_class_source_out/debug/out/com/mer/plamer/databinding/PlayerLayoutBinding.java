// Generated by view binder compiler. Do not edit!
package com.mer.plamer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mer.plamer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlayerLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView artistName;

  @NonNull
  public final TextView currentTime;

  @NonNull
  public final ImageButton playerBackLastPage;

  @NonNull
  public final RelativeLayout playerBottomBar;

  @NonNull
  public final RelativeLayout playerMain;

  @NonNull
  public final RelativeLayout playerTopBar;

  @NonNull
  public final ImageButton playlistNext;

  @NonNull
  public final ImageButton playlistPlay;

  @NonNull
  public final ImageButton playlistPlaying;

  @NonNull
  public final ImageButton playlistPrev;

  @NonNull
  public final ImageButton playlistRepeatList;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final TextView totalLength;

  @NonNull
  public final TextView trackName;

  private PlayerLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView artistName,
      @NonNull TextView currentTime, @NonNull ImageButton playerBackLastPage,
      @NonNull RelativeLayout playerBottomBar, @NonNull RelativeLayout playerMain,
      @NonNull RelativeLayout playerTopBar, @NonNull ImageButton playlistNext,
      @NonNull ImageButton playlistPlay, @NonNull ImageButton playlistPlaying,
      @NonNull ImageButton playlistPrev, @NonNull ImageButton playlistRepeatList,
      @NonNull SeekBar seekBar, @NonNull TextView totalLength, @NonNull TextView trackName) {
    this.rootView = rootView;
    this.artistName = artistName;
    this.currentTime = currentTime;
    this.playerBackLastPage = playerBackLastPage;
    this.playerBottomBar = playerBottomBar;
    this.playerMain = playerMain;
    this.playerTopBar = playerTopBar;
    this.playlistNext = playlistNext;
    this.playlistPlay = playlistPlay;
    this.playlistPlaying = playlistPlaying;
    this.playlistPrev = playlistPrev;
    this.playlistRepeatList = playlistRepeatList;
    this.seekBar = seekBar;
    this.totalLength = totalLength;
    this.trackName = trackName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.player_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artist_name;
      TextView artistName = ViewBindings.findChildViewById(rootView, id);
      if (artistName == null) {
        break missingId;
      }

      id = R.id.current_time;
      TextView currentTime = ViewBindings.findChildViewById(rootView, id);
      if (currentTime == null) {
        break missingId;
      }

      id = R.id.player_back_last_page;
      ImageButton playerBackLastPage = ViewBindings.findChildViewById(rootView, id);
      if (playerBackLastPage == null) {
        break missingId;
      }

      id = R.id.player_bottom_bar;
      RelativeLayout playerBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (playerBottomBar == null) {
        break missingId;
      }

      id = R.id.player_main;
      RelativeLayout playerMain = ViewBindings.findChildViewById(rootView, id);
      if (playerMain == null) {
        break missingId;
      }

      id = R.id.player_top_bar;
      RelativeLayout playerTopBar = ViewBindings.findChildViewById(rootView, id);
      if (playerTopBar == null) {
        break missingId;
      }

      id = R.id.playlist_next;
      ImageButton playlistNext = ViewBindings.findChildViewById(rootView, id);
      if (playlistNext == null) {
        break missingId;
      }

      id = R.id.playlist_play;
      ImageButton playlistPlay = ViewBindings.findChildViewById(rootView, id);
      if (playlistPlay == null) {
        break missingId;
      }

      id = R.id.playlist_playing;
      ImageButton playlistPlaying = ViewBindings.findChildViewById(rootView, id);
      if (playlistPlaying == null) {
        break missingId;
      }

      id = R.id.playlist_prev;
      ImageButton playlistPrev = ViewBindings.findChildViewById(rootView, id);
      if (playlistPrev == null) {
        break missingId;
      }

      id = R.id.playlist_repeat_list;
      ImageButton playlistRepeatList = ViewBindings.findChildViewById(rootView, id);
      if (playlistRepeatList == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.total_length;
      TextView totalLength = ViewBindings.findChildViewById(rootView, id);
      if (totalLength == null) {
        break missingId;
      }

      id = R.id.track_name;
      TextView trackName = ViewBindings.findChildViewById(rootView, id);
      if (trackName == null) {
        break missingId;
      }

      return new PlayerLayoutBinding((ConstraintLayout) rootView, artistName, currentTime,
          playerBackLastPage, playerBottomBar, playerMain, playerTopBar, playlistNext, playlistPlay,
          playlistPlaying, playlistPrev, playlistRepeatList, seekBar, totalLength, trackName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
