// Generated by view binder compiler. Do not edit!
package com.mer.plamer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mer.plamer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UniverseUserLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton universeUserBackLastPage;

  @NonNull
  public final RelativeLayout universeUserBottomBar;

  @NonNull
  public final ListView universeUserList;

  @NonNull
  public final ImageButton universeUserNext;

  @NonNull
  public final ImageButton universeUserPlay;

  @NonNull
  public final ImageButton universeUserPlaying;

  @NonNull
  public final ImageButton universeUserPrev;

  @NonNull
  public final ImageButton universeUserRepeatList;

  @NonNull
  public final EditText universeUserSearchBar;

  @NonNull
  public final RelativeLayout universeUserTopBar;

  private UniverseUserLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton universeUserBackLastPage, @NonNull RelativeLayout universeUserBottomBar,
      @NonNull ListView universeUserList, @NonNull ImageButton universeUserNext,
      @NonNull ImageButton universeUserPlay, @NonNull ImageButton universeUserPlaying,
      @NonNull ImageButton universeUserPrev, @NonNull ImageButton universeUserRepeatList,
      @NonNull EditText universeUserSearchBar, @NonNull RelativeLayout universeUserTopBar) {
    this.rootView = rootView;
    this.universeUserBackLastPage = universeUserBackLastPage;
    this.universeUserBottomBar = universeUserBottomBar;
    this.universeUserList = universeUserList;
    this.universeUserNext = universeUserNext;
    this.universeUserPlay = universeUserPlay;
    this.universeUserPlaying = universeUserPlaying;
    this.universeUserPrev = universeUserPrev;
    this.universeUserRepeatList = universeUserRepeatList;
    this.universeUserSearchBar = universeUserSearchBar;
    this.universeUserTopBar = universeUserTopBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UniverseUserLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UniverseUserLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.universe_user_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UniverseUserLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.universe_user_back_last_page;
      ImageButton universeUserBackLastPage = ViewBindings.findChildViewById(rootView, id);
      if (universeUserBackLastPage == null) {
        break missingId;
      }

      id = R.id.universe_user_bottom_bar;
      RelativeLayout universeUserBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (universeUserBottomBar == null) {
        break missingId;
      }

      id = R.id.universe_user_list;
      ListView universeUserList = ViewBindings.findChildViewById(rootView, id);
      if (universeUserList == null) {
        break missingId;
      }

      id = R.id.universe_user_next;
      ImageButton universeUserNext = ViewBindings.findChildViewById(rootView, id);
      if (universeUserNext == null) {
        break missingId;
      }

      id = R.id.universe_user_play;
      ImageButton universeUserPlay = ViewBindings.findChildViewById(rootView, id);
      if (universeUserPlay == null) {
        break missingId;
      }

      id = R.id.universe_user_playing;
      ImageButton universeUserPlaying = ViewBindings.findChildViewById(rootView, id);
      if (universeUserPlaying == null) {
        break missingId;
      }

      id = R.id.universe_user_prev;
      ImageButton universeUserPrev = ViewBindings.findChildViewById(rootView, id);
      if (universeUserPrev == null) {
        break missingId;
      }

      id = R.id.universe_user_repeat_list;
      ImageButton universeUserRepeatList = ViewBindings.findChildViewById(rootView, id);
      if (universeUserRepeatList == null) {
        break missingId;
      }

      id = R.id.universe_user_search_bar;
      EditText universeUserSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (universeUserSearchBar == null) {
        break missingId;
      }

      id = R.id.universe_user_top_bar;
      RelativeLayout universeUserTopBar = ViewBindings.findChildViewById(rootView, id);
      if (universeUserTopBar == null) {
        break missingId;
      }

      return new UniverseUserLayoutBinding((ConstraintLayout) rootView, universeUserBackLastPage,
          universeUserBottomBar, universeUserList, universeUserNext, universeUserPlay,
          universeUserPlaying, universeUserPrev, universeUserRepeatList, universeUserSearchBar,
          universeUserTopBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
