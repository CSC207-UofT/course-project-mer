// Generated by view binder compiler. Do not edit!
package com.mer.plamer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mer.plamer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainPageLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout mainBottomBar;

  @NonNull
  public final ImageButton mainNext;

  @NonNull
  public final ImageButton mainPlay;

  @NonNull
  public final ImageButton mainPlaying;

  @NonNull
  public final ImageButton mainPlaylist;

  @NonNull
  public final ImageButton mainPrev;

  @NonNull
  public final ImageButton mainRepeatList;

  @NonNull
  public final ImageButton mainSearch;

  @NonNull
  public final ImageButton mainSettings;

  @NonNull
  public final ImageButton mainTrackList;

  @NonNull
  public final ImageButton mainUsers;

  private MainPageLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout mainBottomBar, @NonNull ImageButton mainNext,
      @NonNull ImageButton mainPlay, @NonNull ImageButton mainPlaying,
      @NonNull ImageButton mainPlaylist, @NonNull ImageButton mainPrev,
      @NonNull ImageButton mainRepeatList, @NonNull ImageButton mainSearch,
      @NonNull ImageButton mainSettings, @NonNull ImageButton mainTrackList,
      @NonNull ImageButton mainUsers) {
    this.rootView = rootView;
    this.mainBottomBar = mainBottomBar;
    this.mainNext = mainNext;
    this.mainPlay = mainPlay;
    this.mainPlaying = mainPlaying;
    this.mainPlaylist = mainPlaylist;
    this.mainPrev = mainPrev;
    this.mainRepeatList = mainRepeatList;
    this.mainSearch = mainSearch;
    this.mainSettings = mainSettings;
    this.mainTrackList = mainTrackList;
    this.mainUsers = mainUsers;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainPageLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainPageLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_page_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainPageLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main_bottom_bar;
      RelativeLayout mainBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (mainBottomBar == null) {
        break missingId;
      }

      id = R.id.main_next;
      ImageButton mainNext = ViewBindings.findChildViewById(rootView, id);
      if (mainNext == null) {
        break missingId;
      }

      id = R.id.main_play;
      ImageButton mainPlay = ViewBindings.findChildViewById(rootView, id);
      if (mainPlay == null) {
        break missingId;
      }

      id = R.id.main_playing;
      ImageButton mainPlaying = ViewBindings.findChildViewById(rootView, id);
      if (mainPlaying == null) {
        break missingId;
      }

      id = R.id.main_playlist;
      ImageButton mainPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (mainPlaylist == null) {
        break missingId;
      }

      id = R.id.main_prev;
      ImageButton mainPrev = ViewBindings.findChildViewById(rootView, id);
      if (mainPrev == null) {
        break missingId;
      }

      id = R.id.main_repeat_list;
      ImageButton mainRepeatList = ViewBindings.findChildViewById(rootView, id);
      if (mainRepeatList == null) {
        break missingId;
      }

      id = R.id.main_search;
      ImageButton mainSearch = ViewBindings.findChildViewById(rootView, id);
      if (mainSearch == null) {
        break missingId;
      }

      id = R.id.main_settings;
      ImageButton mainSettings = ViewBindings.findChildViewById(rootView, id);
      if (mainSettings == null) {
        break missingId;
      }

      id = R.id.main_track_list;
      ImageButton mainTrackList = ViewBindings.findChildViewById(rootView, id);
      if (mainTrackList == null) {
        break missingId;
      }

      id = R.id.main_users;
      ImageButton mainUsers = ViewBindings.findChildViewById(rootView, id);
      if (mainUsers == null) {
        break missingId;
      }

      return new MainPageLayoutBinding((ConstraintLayout) rootView, mainBottomBar, mainNext,
          mainPlay, mainPlaying, mainPlaylist, mainPrev, mainRepeatList, mainSearch, mainSettings,
          mainTrackList, mainUsers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
