// Generated by view binder compiler. Do not edit!
package com.mer.plamer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mer.plamer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addItemArtist;

  @NonNull
  public final ImageView addItemBackground;

  @NonNull
  public final TextView addItemLength;

  @NonNull
  public final TextView addItemName;

  @NonNull
  public final CheckBox checkBox;

  private AddItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addItemArtist,
      @NonNull ImageView addItemBackground, @NonNull TextView addItemLength,
      @NonNull TextView addItemName, @NonNull CheckBox checkBox) {
    this.rootView = rootView;
    this.addItemArtist = addItemArtist;
    this.addItemBackground = addItemBackground;
    this.addItemLength = addItemLength;
    this.addItemName = addItemName;
    this.checkBox = checkBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_item_artist;
      TextView addItemArtist = ViewBindings.findChildViewById(rootView, id);
      if (addItemArtist == null) {
        break missingId;
      }

      id = R.id.add_item_background;
      ImageView addItemBackground = ViewBindings.findChildViewById(rootView, id);
      if (addItemBackground == null) {
        break missingId;
      }

      id = R.id.add_item_length;
      TextView addItemLength = ViewBindings.findChildViewById(rootView, id);
      if (addItemLength == null) {
        break missingId;
      }

      id = R.id.add_item_name;
      TextView addItemName = ViewBindings.findChildViewById(rootView, id);
      if (addItemName == null) {
        break missingId;
      }

      id = R.id.check_box;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      return new AddItemBinding((ConstraintLayout) rootView, addItemArtist, addItemBackground,
          addItemLength, addItemName, checkBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
