// Generated by view binder compiler. Do not edit!
package com.mer.plamer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mer.plamer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlaylistLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton playlistAdd;

  @NonNull
  public final ImageButton playlistBackLastPage;

  @NonNull
  public final RelativeLayout playlistBottomBar;

  @NonNull
  public final ListView playlistList;

  @NonNull
  public final ImageButton playlistNext;

  @NonNull
  public final ImageButton playlistPlay;

  @NonNull
  public final ImageButton playlistPlaying;

  @NonNull
  public final ImageButton playlistPrev;

  @NonNull
  public final ImageButton playlistRepeatList;

  @NonNull
  public final TextView playlistTittle;

  @NonNull
  public final RelativeLayout playlistTopBar;

  private PlaylistLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton playlistAdd, @NonNull ImageButton playlistBackLastPage,
      @NonNull RelativeLayout playlistBottomBar, @NonNull ListView playlistList,
      @NonNull ImageButton playlistNext, @NonNull ImageButton playlistPlay,
      @NonNull ImageButton playlistPlaying, @NonNull ImageButton playlistPrev,
      @NonNull ImageButton playlistRepeatList, @NonNull TextView playlistTittle,
      @NonNull RelativeLayout playlistTopBar) {
    this.rootView = rootView;
    this.playlistAdd = playlistAdd;
    this.playlistBackLastPage = playlistBackLastPage;
    this.playlistBottomBar = playlistBottomBar;
    this.playlistList = playlistList;
    this.playlistNext = playlistNext;
    this.playlistPlay = playlistPlay;
    this.playlistPlaying = playlistPlaying;
    this.playlistPrev = playlistPrev;
    this.playlistRepeatList = playlistRepeatList;
    this.playlistTittle = playlistTittle;
    this.playlistTopBar = playlistTopBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaylistLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaylistLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.playlist_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaylistLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.playlist_add;
      ImageButton playlistAdd = ViewBindings.findChildViewById(rootView, id);
      if (playlistAdd == null) {
        break missingId;
      }

      id = R.id.playlist_back_last_page;
      ImageButton playlistBackLastPage = ViewBindings.findChildViewById(rootView, id);
      if (playlistBackLastPage == null) {
        break missingId;
      }

      id = R.id.playlist_bottom_bar;
      RelativeLayout playlistBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (playlistBottomBar == null) {
        break missingId;
      }

      id = R.id.playlist_list;
      ListView playlistList = ViewBindings.findChildViewById(rootView, id);
      if (playlistList == null) {
        break missingId;
      }

      id = R.id.playlist_next;
      ImageButton playlistNext = ViewBindings.findChildViewById(rootView, id);
      if (playlistNext == null) {
        break missingId;
      }

      id = R.id.playlist_play;
      ImageButton playlistPlay = ViewBindings.findChildViewById(rootView, id);
      if (playlistPlay == null) {
        break missingId;
      }

      id = R.id.playlist_playing;
      ImageButton playlistPlaying = ViewBindings.findChildViewById(rootView, id);
      if (playlistPlaying == null) {
        break missingId;
      }

      id = R.id.playlist_prev;
      ImageButton playlistPrev = ViewBindings.findChildViewById(rootView, id);
      if (playlistPrev == null) {
        break missingId;
      }

      id = R.id.playlist_repeat_list;
      ImageButton playlistRepeatList = ViewBindings.findChildViewById(rootView, id);
      if (playlistRepeatList == null) {
        break missingId;
      }

      id = R.id.playlist_tittle;
      TextView playlistTittle = ViewBindings.findChildViewById(rootView, id);
      if (playlistTittle == null) {
        break missingId;
      }

      id = R.id.playlist_top_bar;
      RelativeLayout playlistTopBar = ViewBindings.findChildViewById(rootView, id);
      if (playlistTopBar == null) {
        break missingId;
      }

      return new PlaylistLayoutBinding((ConstraintLayout) rootView, playlistAdd,
          playlistBackLastPage, playlistBottomBar, playlistList, playlistNext, playlistPlay,
          playlistPlaying, playlistPrev, playlistRepeatList, playlistTittle, playlistTopBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
